name: build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: build with jdk ${{ matrix.java-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version:
          - 8
          - 11
          - 17
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java-version }}
      - uses: actions/cache@v2
        env:
          cache-name: maven-dependencies
        with:
          path: ~/.m2
          key: ${{ env.cache-name }}-${{ github.workflow }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ github.workflow }}-
            ${{ env.cache-name }}-
      - name: mvnw install
        run: ./mvnw -B --color=always clean install
      - name: Codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: bash <(curl -s https://codecov.io/bash)
      - name: Before Cache
        run: |
          ./mvnw -B --color=always build-helper:remove-project-artifact || :
          find ~/.m2/ -type d -name '*-SNAPSHOT' \( -exec rm -rf '{}' \; -prune \)
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    if: ${{ github.repository == 'zhanhb/thymeleaf-layout-dialect' && github.event_name == 'push' }}
    needs: [ build ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11
      - uses: actions/cache@v2
        env:
          cache-name: maven-dependencies
        with:
          path: ~/.m2
          key: ${{ env.cache-name }}-${{ github.workflow }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ github.workflow }}-
            ${{ env.cache-name }}-
      - name: Maven Deploy
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          version="$(./mvnw -B -N help:evaluate -Dexpression=project.version -q -DforceStdout)"
          case "$version" in
          *-SNAPSHOT) ./mvnw -B --color=always -s .github/settings.xml "-Dbundle.manifest.builtBy=GitHub Actions" deploy ;;
          *) printf '\e[31m%s\e[m\n' "skip deploy version '$version'" ;;
          esac
      - name: Before Cache
        run: |
          ./mvnw -B --color=always build-helper:remove-project-artifact || :
          find ~/.m2/ -type d -name '*-SNAPSHOT' \( -exec rm -rf '{}' \; -prune \)
