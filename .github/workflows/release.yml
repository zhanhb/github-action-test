name: release

on:
  workflow_dispatch:
    inputs:
      java-version:
        type: choice
        description: java version to work with
        default: '11'
        required: true
        options:
          - '8'
          - '11'
          - '17'
      release:
        description: release version
        required: false
      tag:
        description: git tag
        required: false
      next-version:
        description: next develop version
        required: false
      build-timestamp:
        description: |
          project.build.outputTimestamp in UTC
          format: yyyy-MM-dd'T'HH:mm:ssZ
          sample: 2001-09-17T04:45:52Z
        required: false
      skip-perform:
        type: boolean
        required: false
        description: skip release perform
        default: false

jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        env:
          cache-name: maven-dependencies
        with:
          path: ~/.m2
          key: ${{ env.cache-name }}-${{ github.workflow }}-${{ hashFiles('.github/**', '**/pom.xml') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ github.workflow }}-
            ${{ env.cache-name }}-
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: ${{ github.event.inputs.java-version }}
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: show settings.xml
        run: cat ~/.m2/settings.xml
      - name: Generate settings.xml
        uses: whelk-io/maven-settings-xml-action@v21
        with:
          servers: >
            [{
              "id": "github",
              "username": "${env.GITHUB_ACTOR}",
              "password": "${env.GITHUB_TOKEN}"
            }, {
              "id": "gpg.passphrase",
              "passphrase": "${env.MAVEN_GPG_PASSPHRASE}"
            }, {
              "id": "ossrh",
              "username": "${env.MAVEN_USERNAME}",
              "password": "${env.MAVEN_PASSWORD}"
            }]
      - name: show settings.xml
        run: cat ~/.m2/settings.xml
      - name: git config
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: .github/functions.sh git_config
      - name: Release Prepare
        if: github.ref_type == 'branch'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          INPUT_RELEASE: ${{ github.event.inputs.release }}
          INPUT_TAG: ${{ github.event.inputs.tag }}
          INPUT_NEXT_VERSION: ${{ github.event.inputs.next-version }}
          INPUT_BUILD_TIMESTAMP: ${{ github.event.inputs.build-timestamp }}
        run: .github/functions.sh release_prepare
      - name: Release Perform
        if: github.event.inputs.skip-perform != 'true'
        env:
          GITHUB_TOKEN: ${{ github.token }}
          MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        run: .github/functions.sh release_perform
      - name: Before Cache
        run: .github/functions.sh purge_artifacts
