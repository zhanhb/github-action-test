
# Test the use of a nested fragment section defined and used in one go.
# Based off GitHub issue #37 - https://github.com/ultraq/thymeleaf-layout-dialect/issues/37

%TEMPLATE_MODE HTML


%INPUT
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" 
	xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout">
<body>

	<!--/* accordion-group layout defined */-->
	<div layout:fragment="accordion-group" th:remove="all">
		<div>accordion header</div>
		<div layout:fragment="accordion-inner">accordion inner X</div>
	</div>

	<!--/* accordion-group layout used */-->
	<div layout:include="~{this :: accordion-group}">
		<div layout:fragment="accordion-inner">accordion inner

			<!--/* contractList layout defined and used */-->
			<th:block th:with="i=1">
				<div layout:fragment="contractList(i)">
					<th:block th:text="|contract list ${i}|"></th:block>
					<th:block layout:fragment="removeEmailFromList">remove from 1</th:block>
				</div>
			</th:block>

			<!--/* contractList layout used */-->
			<div layout:replace="~{this :: contractList(2)}">
				<th:block layout:fragment="removeEmailFromList">remove from 2</th:block>
			</div>

			<!--/* contractList layout used */-->
			<div layout:replace="~{this :: contractList(3)}">
				<th:block layout:fragment="removeEmailFromList">remove from 3</th:block>
			</div>
		</div>
	</div>
</body>
</html>


%OUTPUT
<!DOCTYPE html>
<html>
<body>
	<div>
		<div>accordion header</div>
		<div>accordion inner
			<div>
				contract list 1
				remove from 1
			</div>
			<div>
				contract list 2
				remove from 2
			</div>
			<div>
				contract list 3
				remove from 3
			</div>
		</div>
	</div>
</body>
</html>
